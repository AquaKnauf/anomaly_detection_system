apiVersion: v1
kind: ConfigMap
metadata:
  name: kafka-config
  namespace: fraud-detection
data:
  server.properties: |
    # Basic Kafka Configuration
    broker.id=0
    
    # KRaft Configuration (no Zookeeper)
    process.roles=broker,controller
    node.id=0
    controller.quorum.voters=0@kafka-0.kafka-headless.fraud-detection.svc.cluster.local:9093
    controller.listener.names=CONTROLLER
    listeners=PLAINTEXT://0.0.0.0:9092,CONTROLLER://0.0.0.0:9093
    advertised.listeners=PLAINTEXT://kafka-0.kafka-headless.fraud-detection.svc.cluster.local:9092
    listener.security.protocol.map=PLAINTEXT:PLAINTEXT,CONTROLLER:PLAINTEXT
    inter.broker.listener.name=PLAINTEXT
    
    # Single Node Settings
    num.network.threads=3
    num.io.threads=8
    socket.send.buffer.bytes=102400
    socket.receive.buffer.bytes=102400
    socket.request.max.bytes=104857600
    
    # Log Configuration
    log.dirs=/bitnami/kafka/data
    num.partitions=3
    num.recovery.threads.per.data.dir=1
    offsets.topic.replication.factor=1
    transaction.state.log.replication.factor=1
    transaction.state.log.min.isr=1
    default.replication.factor=1
    min.insync.replicas=1
    
    # Log Retention
    log.retention.hours=24
    log.retention.check.interval.ms=300000
    log.segment.bytes=1073741824
    
    # Topic Management
    auto.create.topics.enable=true
    delete.topic.enable=true
    
    # KRaft Cluster ID (generate new one if needed)
    cluster.id=single-node-kafka-cluster

---
apiVersion: v1
kind: Service
metadata:
  name: kafka
  namespace: fraud-detection
spec:
  ports:
  - name: kafka
    port: 9092
    targetPort: 9092
  - name: controller
    port: 9093
    targetPort: 9093
  selector:
    app: kafka

---
apiVersion: v1
kind: Service
metadata:
  name: kafka-headless
  namespace: fraud-detection
spec:
  clusterIP: None
  ports:
  - name: kafka
    port: 9092
    targetPort: 9092
  - name: controller
    port: 9093
    targetPort: 9093
  selector:
    app: kafka

---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: kafka
  namespace: fraud-detection
spec:
  serviceName: kafka-headless
  replicas: 1
  selector:
    matchLabels:
      app: kafka
  template:
    metadata:
      labels:
        app: kafka
    spec:
      containers:
      - name: kafka
        image: bitnami/kafka:4.0.0-debian-12-r10
        ports:
        - containerPort: 9092
          name: kafka
        - containerPort: 9093
          name: controller
        env:
        - name: KAFKA_CFG_NODE_ID
          value: "0"
        - name: KAFKA_CFG_PROCESS_ROLES
          value: "broker,controller"
        - name: KAFKA_CFG_CONTROLLER_QUORUM_VOTERS
          value: "0@kafka-0.kafka-headless.fraud-detection.svc.cluster.local:9093"
        - name: KAFKA_CFG_LISTENERS
          value: "PLAINTEXT://0.0.0.0:9092,CONTROLLER://0.0.0.0:9093"
        - name: KAFKA_CFG_ADVERTISED_LISTENERS
          value: "PLAINTEXT://kafka-0.kafka-headless.fraud-detection.svc.cluster.local:9092"
        - name: KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP
          value: "PLAINTEXT:PLAINTEXT,CONTROLLER:PLAINTEXT"
        - name: KAFKA_CFG_CONTROLLER_LISTENER_NAMES
          value: "CONTROLLER"
        - name: KAFKA_CFG_INTER_BROKER_LISTENER_NAME
          value: "PLAINTEXT"
        - name: KAFKA_CFG_NUM_PARTITIONS
          value: "3"
        - name: KAFKA_CFG_DEFAULT_REPLICATION_FACTOR
          value: "1"
        - name: KAFKA_CFG_OFFSETS_TOPIC_REPLICATION_FACTOR
          value: "1"
        - name: KAFKA_CFG_TRANSACTION_STATE_LOG_REPLICATION_FACTOR
          value: "1"
        - name: KAFKA_CFG_TRANSACTION_STATE_LOG_MIN_ISR
          value: "1"
        - name: KAFKA_CFG_AUTO_CREATE_TOPICS_ENABLE
          value: "true"
        - name: KAFKA_CFG_DELETE_TOPIC_ENABLE
          value: "true"
        - name: KAFKA_CFG_LOG_RETENTION_HOURS
          value: "24"
        - name: KAFKA_KRAFT_CLUSTER_ID
          value: "single-node-kafka-cluster"
        volumeMounts:
        - name: kafka-data
          mountPath: /bitnami/kafka/data
        - name: kafka-config
          mountPath: /opt/bitnami/kafka/config/kraft/server.properties
          subPath: server.properties
        livenessProbe:
          tcpSocket:
            port: 9092
          initialDelaySeconds: 30
          periodSeconds: 10
        readinessProbe:
          tcpSocket:
            port: 9092
          initialDelaySeconds: 30
          periodSeconds: 5
      volumes:
      - name: kafka-config
        configMap:
          name: kafka-config
  volumeClaimTemplates:
  - metadata:
      name: kafka-data
    spec:
      accessModes: ["ReadWriteOnce"]
      resources:
        requests:
          storage: 10Gi